input FormInput {
  """
  Elements with their values.
  """
  values: [FormInputElement]

  """
  Whether the form should be validated. This only validates the form. Setting
  false will return the initial form without any values applied to it.
  """
  validate: Boolean

  """
  Whether the form should be submitted. This also performs validation.
  """
  submit: Boolean
}

input FormInputElement {
  """
  The name of the element.
  """
  name: String!

  """
  The value of the element.
  """
  value: MapData
}

type FormResult {
  """
  Form items.
  """
  items: [FormItem]

  """
  Any remaining errors of this form that could not be assigned to form items.
  """
  errors: [String]

  """
  Indicates if the form was submitted.
  """
  isSubmitted: Boolean

  """
  In the case of entity forms, this contains the created entity after a
  successful form submission.
  """
  entity: Entity
}

"""
Describes an interface for Drupal Form API elements.
"""
interface FormElement {
  """
  The name of the form element, e.g. "textfield" or "select".
  """
  type: String!
}

"""
Provides a one-line text field form element.
"""
type FormElementTextfield implements FormElement {
  type: String!

  """
  Maximum number of characters of input allowed.
  """
  maxlength: Int

  """
  The size of the input element in characters.
  """
  size: Int

  """
  A string for the native HTML5 pattern attribute.
  """
  pattern: String
}

type FormElementDate implements FormElement {
  type: String!
  value: String
}

type FormElementSelectOption {
  value: String
  label: String
}

type FormElementSelect implements FormElement {
  type: String!
  """
  The select options.
  """
  options: [FormElementSelectOption]
}

type FormElementRadios implements FormElement {
  type: String!
  """
  The radio options.
  """
  options: [FormElementSelectOption]
}

type FormElementCheckbox implements FormElement {
  type: String!
}

type FormElementRadio implements FormElement {
  type: String!
}

"""
Fallback type for form elements that have not been implemented.
"""
type FormElementUnknown implements FormElement {
  type: String!
}

type FormItem {
  """
  The name of the form item. Must be used when submitting the form.
  """
  name: String!

  """
  The title that can be used to label form elements.
  """
  title: String

  """
  The description.
  """
  description: String

  """
  The default value.
  """
  defaultValue: MapData

  """
  Indicates if the form element is required.
  """
  required: Boolean!

  """
  An error message for this form element.
  """
  error: String

  """
    The name of the AJAX event, e.g. "change". If this value is present it means
  the current FormState can be sent to refresh the form.
  """
  ajaxEvent: String

  """
  The form element.
  """
  element: FormElement
}
